package Project_4;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/****************************************************************************
 * 
 * This class allows the user to enter in a message and unMix it using a file
 * that has all the undo commands saved to it
 * 
 * @author Nathan Kelderman
 * @version 1.0
 ***************************************************************************/
public class UnMix implements IUnMix{
	
	/** The linked list used to store the message */
	public LinkedList<Character> link;
	
	/***********************************************************************
	 * 
	 * This method is the main method that runs the program
	 * 
	 * @param args
	 ***********************************************************************/
	public static void main(String[] args) {
		UnMix n = new UnMix();
		n.process();
	}
	
	/***********************************************************************
	 * 
	 * This method processes the message given by the user and the filename 
	 * given by the user and sends that to the load method
	 * 
	 ***********************************************************************/
	public void process() {
		String filename = null;
		String message = null;
		Scanner scan = new Scanner(System.in);
		boolean validInput = false;
		while (validInput == false){
			System.out.print("Enter the mixed up message: ");
			String s = scan.nextLine();
			if ( !s.equals("")) {
				message = s;
				validInput = true;
			}
			else
				System.out.println("Invalid input.");
		}
		link = new LinkedList<Character>();
		char[] c = message.toCharArray();
		int count = c.length - 1;
		for ( int x = c.length; x > 0; x--) {
			link.addAtTop(c[count]);
			count--;
		}
		
		validInput = false;
		while ( validInput == false) {
			System.out.print("Enter the filename: ");
			String s = scan.nextLine();
			if ( !s.equals("")) {
				filename = s;
				validInput = true;
			}
			else
				System.out.println("Invalid input.");
		}
		
		System.out.println(UnMixUsingFile(filename, message));
	}

	/***********************************************************************
	 * 
	 * This method takes in the filename and the message and attempts to
	 * unMix it
	 * 
	 * (non-Javadoc)
	 * @see Project_4.IUnMix#UnMixUsingFile(java.lang.String, 
	 * java.lang.String)
	 ***********************************************************************/
	public String UnMixUsingFile(String filename, String mixedMessage) {
		try{
			// open the data file
			Scanner fileReader = new Scanner(new File(filename)); 
			String s = fileReader.nextLine();
			int count = 0;
			//cycles through commands and processes each one
			while( count < 3) {
				processCommand(s);
				System.out.println(s);
				s = fileReader.nextLine();
				count++;
			}
		}
			// could not find file
		catch(FileNotFoundException error) {
			throw new IllegalArgumentException();
		}
			// problem reading the file
		catch(Exception error){
			throw new IllegalArgumentException();
		}
		return link.toString();
	}
	
	/***********************************************************************
	 * 
	 * This method processes the actual commands and performs them on the
	 * message
	 * 
	 ***********************************************************************/
	public void processCommand(String command) {
		if ( command.length() > 0 ){
			String s1 = null, s2 = null, s3 = null; //s4 = null;
			int count = 0;
			for ( String s: command.split(" ")) {
				switch (count) {
					case 0: s1 = s;
							count++;
							break;
					case 1: s2 = s;
							count++;
							break;
					case 2: s3 = s;
							count++;
							break;
//					case 3: s4 = s;
//							count++;
//							break;
				}
			}
			if ( s1.charAt(0) == 'a' && Character.isLetter(s2.charAt(0)) &&
					Character.isDigit(s3.charAt(0))){
				link.addAt(s2.charAt(0), Integer.parseInt(s3));
			}
			else if ( s1.charAt(0) == 'r' && s2.length() == 1 && 
					Character.isLetter(s2.charAt(0)) && 
					Character.isDigit(s3.charAt(0)) ) {
				link.removeAt(s2.charAt(0), Integer.parseInt(s3));
			}
		}
	}
	
}
