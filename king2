package chess;

public class King extends ChessPiece {
	
	private boolean isCastlingValid;
	
	private final int PIECE_WORTH = -100;

	protected King(Player player) {
		super(player);
		isCastlingValid = true;
	}
	
	public boolean isCastlingValid() {
		return isCastlingValid;
	}
	
	public void setCastlingValid(boolean isCastlingValid) {
		this.isCastlingValid = isCastlingValid;
	}

	@Override
	public String type() {
		return "King";
	}
	
	@Override
	public int getPieceWorth() {
		return PIECE_WORTH;
	}
	
	@Override
	public boolean isValidMove(Move move, IChessPiece[][] board) {
		if (super.isValidMove(move, board))
			for (int row = - 1; row <= 1; row++)
				for (int col = -1; col <= 1; col++) {
					if ((move.fromColumn + col) == move.toColumn && (move.fromRow + row) == move.toRow) {
						isCastlingValid = false;
						return true;
					}	
				}
		return false;
	}
}
